version: 2.1
executors:
  general-executor:
    docker:
      - image: circleci/ruby:2.4.1
  lw_executor:
    docker:
      - image: circleci/node:13.8.0
orbs:
  slack: circleci/slack@3.4.2
  aws-cli: circleci/aws-cli@1.1.0
  node: circleci/node@2.0.2

jobs:
  hello-world:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Say Hello
          command: |
            echo "Hello World"
  build_frontend:
    executor: lw_executor
    steps:
      - checkout
      - run:
          name: build Frontend
          command:  |  #specify the instructions to be executed while in this section. This should be modify accordingly
            cd frontend 
            npm install 
            npm run build 
  build_backend: #build the backend. exiists naa necessary to perform the npm install first before running npm run build
    executor: lw_executor
    steps:
      - checkout
      - run:
          name: Backend build
          command: |
            cd backend
            npm install
            npm run build
  test_backend:
    executor: lw_executor
    steps:
      - checkout
      - run: mkdir -p ~/junit
      - run:
          name: running backend test
          command: |
            cd backend
            npm install
            npm install tap-xunit -g # or you could use  "yarn add ava tap-xunit --dev"
            mkdir -p ~/reports
            npm run test | tap-xunit > ~/reports/ava.xml && npm audit fix
            # ava --tap | tap-xunit > ~/reports/ava.xml
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports  
  
  test_frontend:
    executor: lw_executor
    steps:
      - checkout
      - run:
          name: running and saving frontend tests
          command: |
            cd frontend
            npm install 
            npm install tap-xunit -g # or you could use  "yarn add ava tap-xunit --dev"
            mkdir -p ~/reports
            npm run test | tap-xunit > ~/reports/ava.xml && npm audit fix
            # ava --tap | tap-xunit > ~/reports/ava.xml
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports  
          
workflows: #jobs execution order
  default:
    jobs:
      - hello-world
      - build_frontend
      - build_backend
      - test_backend:
          requires:
            - build_backend
      - test_frontend:
          requires:
            - build_frontend

