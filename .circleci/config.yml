version: 2.1
executors:
  general-executor:
    docker:
      - image: circleci/ruby:2.4.1
  lw_executor:
    docker:
      - image: circleci/node:13.8.0
  aws_executor:
    docker:
      - image: amazon/aws-cli
orbs:
  aws-cli: circleci/aws-cli@1.1.0
  node: circleci/node@3.0.0
  slack: circleci/slack@3.4.2
  twilio: circleci/twilio@0.0.1

jobs:
  hello-world:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Say Hello
          command: |
            echo "Hello World"
  build_frontend:
    executor: lw_executor
    steps:
      - checkout
      - run:
          name: build Frontend
          command:  |  #specify the instructions to be executed while in this section. This should be modify accordingly
            cd frontend 
            npm install 
            npm run build 
  build_backend: #build the backend. exiists naa necessary to perform the npm install first before running npm run build
    executor: lw_executor
    steps:
      - checkout
      - run:
          name: Backend build
          command: |
            cd backend
            npm install
            npm run build
  test_backend:
    executor: lw_executor
    steps:
      - checkout
      - run: mkdir -p ~/junit
      - run:
          name: running backend test
          command: |
            cd backend
            npm install --save oauth-sign 
            npm audit fix
            npm run test
            #npm install tap-xunit -g # or you could use  "yarn add ava tap-xunit --dev"
            #mkdir -p ~/reports
            #npm run test | tap-xunit > ~/reports/ava.xml 
            # ava --tap | tap-xunit > ~/reports/ava.xml
          #when: always
      #- store_test_results:
      #    path: ~/reports
      #- store_artifacts:
      #    path: ~/reports  
  
  test_frontend:
    executor: lw_executor
    steps:
      - checkout
      - run:
          name: running and saving frontend tests
          command: |
            cd frontend
            npm install --save oauth-sign 
            npm audit fix
            #npm install tap-xunit -g # or you could use  "yarn add ava tap-xunit --dev"
            #mkdir -p ~/reports
            #npm run test | tap-xunit > ~/reports/ava.xml 
            # ava --tap | tap-xunit > ~/reports/ava.xml
          #when: always
      #- store_test_results:
      #    path: ~/reports
      #- store_artifacts:
      #    path: ~/reports  
  analyze_frontend:
    executor: lw_executor
    steps:
      - checkout
      - run: 
          name: frontend analysis
          command: |
            cd frontend 
            npm install
            npm audit fix --audit-level=critical --force 
  analyze_backend:
      executor: lw_executor
      steps:
        - checkout
        - run: 
            name: backend analysis
            command: |
              cd backend 
              npm install
              npm audit fix --audit-level=critical --force
              
  build_test_and_notify:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run: npm test
      - slack/notify:
          color: "#42e2f4"
          mentions: "autodeploy app build error"
          message: "The autodeploy build: [$CIRCLE_BUILD_NUM]($CIRCLE_BUILD_URL) of [<<pipeline.git.branch>>](<<pipeline.project.git_url>>/tree/<<pipeline.git.branch>>) _($CIRCLE_USERNAME)_ has Failed"
      - slack/status:
          fail_only: true
          mentions: "yemiwebby"
      - twilio/sendsms: #sends SMS for each successful build
        body: SMS sent using twilio app
      - twilio/alert: # sends SMS when an error occurs. 
          body: "Autodeploy build : [$CIRCLE_BUILD_NUM]($CIRCLE_BUILD_URL) failed due to an error."
  createEC2_infrastruture_for_backend: #create AWS infrastructure
    executor: aws_executor #AWS 662013528150
    steps:
      - checkout
      - run:
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --stack-name backendStack
#slack Workspace: circlecidemoworkspace.slack.com 
workflows: #jobs execution order
  default:
    jobs:
      - hello-world
      - build_frontend
      - build_backend
      - test_backend:
          requires:
            - build_backend
      - test_frontend:
          requires:
            - build_frontend
      - analyze_backend
      - analyze_frontend
      - createEC2_infrastruture_for_backend: #region specified and pem key changed.
          requires:
            - build_backend
      - build_test_and_notify:
          requires:
            - build_backend

 

